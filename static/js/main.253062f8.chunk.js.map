{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","question","setQuestion","history","trigger","setTrigger","uri","encodeURIComponent","checkHistory","x","length","shift","push","className","src","checked","id","placeholder","onChange","e","target","value","onClick","match","fetch","then","response","json","console","log","document","getElementById","innerHTML","JSON","stringify","magic","answer","window","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sMAwEeA,MArEf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KACA,GADA,KAC8BH,oBAAS,IAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAGIC,EAAM,0CADGC,mBAAmB,oCAkB1BC,EAAe,SAACP,EAAUQ,GACP,KAAnBN,EAAQO,QACVP,EAAQQ,QAENR,EAAQO,OAAS,IACnBP,EAAQS,KAAK,CAACX,EAAUQ,KAc5B,OACF,qBAAKI,UAAU,aAAf,SAEI,sBAAKA,UAAU,SAAf,UAEE,8CAIC,qBAAKC,IAAI,gBAAgBC,QAASX,IAEnC,qBAAKS,UAAU,cAAf,SACE,mBAAGG,GAAG,QAAN,+BAGD,uBAAOC,YAAY,kBAAkBC,SAzBrB,SAACC,GAClBjB,EAAYiB,EAAEC,OAAOC,OACrBhB,GAAW,MAyBX,wBAAQW,GAAG,MAAMM,QAnDF,WACjBjB,GAAW,GACPJ,EAASsB,MAAM,sBACjBC,MAAMlB,GACLmB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJC,QAAQC,IAAIF,GACZG,SAASC,eAAe,SAASC,UAAYC,KAAKC,UAAUP,EAAKQ,MAAMC,QACvE5B,EAAaP,EAAU0B,EAAKQ,MAAMC,WAGpCN,SAASC,eAAe,SAASC,UAAY,2BAwC7C,oBAEA,wBAAQV,QAxBS,WACnBe,OAAOC,MAAMnC,IAuBX,2BCpDSoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASC,eAAe,SAM1BQ,K","file":"static/js/main.253062f8.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nfunction App() {\n  const [question, setQuestion] = useState('');\n  const [history, setHistory] = useState([]);\n  const [trigger, setTrigger] = useState(false);\n\n  let params = encodeURIComponent(\"Is today going to be a good day?\");\n  let uri = \"https://8ball.delegator.com/magic/JSON/\" + params;\n \n  const myFunction = () => {\n    setTrigger(true);\n    if (question.match(/^[A-Za-z'0-9 ]+[?]/)) {\n      fetch(uri)\n      .then(response => response.json())\n      .then(json => {\n        console.log(json);\n        document.getElementById(\"query\").innerHTML = JSON.stringify(json.magic.answer);\n        checkHistory(question, json.magic.answer);\n      }) \n    } else {\n      document.getElementById(\"query\").innerHTML = \"That wasn't a question.\";\n    } \n  };\n\n  const checkHistory = (question, x) => {\n    if (history.length === 10) {\n      history.shift();\n    } \n    if (history.length < 10) {\n      history.push([question, x]);\n    }\n  };\n\n  const questionFunc = (e) => {\n      setQuestion(e.target.value);\n      setTrigger(false);\n    };\n\n  const historyAlert = () => {\n    window.alert(history);\n  };\n\n\n  return (\n<div className='background' >\n\n    <div className='parent'>\n\n      <h1>\n        Magic 8-Ball\n      </h1>\n\n       <img src='./logo192.png' checked={trigger}/>\n\n      <div className='queryResult'>\n        <p id=\"query\">Hello Friend !!</p>\n      </div>\n\n       <input placeholder=\"Got a question?\" onChange={questionFunc}/>\n\n      <button id=\"btn\" onClick={myFunction}>Submit</button>\n\n      <button onClick={historyAlert}>History</button>       \n\n    </div>\n    \n</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}